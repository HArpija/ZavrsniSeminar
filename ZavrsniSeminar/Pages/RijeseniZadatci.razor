@page "/rijeseniZadatci"
@using ZavrsniSeminar.Models;
@inject HttpClient httpClient;
@inject NavigationManager navManager;
@inject IJSRuntime jsRun;


 <p><h3>Rijeseni zadatci</h3>
<button @onclick="Natrag" type="button">Natrag</button></p>

 @if (IsError==true)
{
    <p>Nešto je pošlo po krivu,kontaktirajte administratora!</p>
}

<form>
    <table class="table table-hover">
        <thead>
            <tr class="table-primary">
                <th scope="col">Id</th>
                <th scope="col">Todo</th>
                <th scope="col">Radnik ime</th>
                <th scope="col">Radnik prezime</th>
                <th scope="col">Opis posla</th>
                <th scope="col">Datum</th>
                <th colspan="3">Riješeno</th>
            </tr>
        </thead>
        @foreach (var item in radniZadataks)
        {
            <tbody>
                <tr>
                    <td> @item.Id</td>
                    <td> @item.Todo</td>
                    <td> @item.RadnikIme</td>
                    <td> @item.RadnikPrezime</td>
                    <td> @item.OpisPosla</td>
                    <td> @item.Datum</td>
                    <td> <button @onclick="()=>Obrisi(item.Id)">Obriši</button> </td>
                </tr>
            </tbody>
        }
    </table>
  
</form>




@code {
    public int Id { get; set; }
    public bool IsDone = true;
    public bool IsError = false;
    public List<RadniZadatak> radniZadataks = new List<RadniZadatak>();
    public RadniZadatak radniZadatak = new RadniZadatak();

    protected override async Task OnInitializedAsync()   /* dohvacanje cijele liste iz Apija  */
    {
        var result = await httpClient.GetAsync("https://expertvjezbeapi.azurewebsites.net/api/ToDoSeminars");
        if (result.IsSuccessStatusCode)
        {
            radniZadataks = await result.Content.ReadFromJsonAsync<List<RadniZadatak>>();
            radniZadataks = radniZadataks.OrderByDescending(x => x.Datum).Where(x => x.IsDone == true).ToList();    /* po zadnje dodanom datumu */
        }

    }



    public async Task Obrisi(int Id)
    {
        var result = await httpClient.DeleteAsync($"https://expertvjezbeapi.azurewebsites.net/api/ToDoSeminars/{Id}");
        if(result.IsSuccessStatusCode)
        {
            var result2 = await httpClient.GetAsync("https://expertvjezbeapi.azurewebsites.net/api/ToDoSeminars"); /* dohvati novu listu,bez obrisanog */
            if (result2.IsSuccessStatusCode)
            {
                radniZadataks = await result2.Content.ReadFromJsonAsync<List<RadniZadatak>>();
                radniZadataks = radniZadataks.Where(x => x.IsDone ==true).OrderByDescending(x => x.Datum).ToList();    /* rijeseni zadatci,redosljed prema zadnje rijesenom po datumu  */
            }
            StateHasChanged();
        }
        
    }

    //  public void Obrisi(int id)
    //{
    //    navManager.NavigateTo($"/delete/{id}");
    //}
  
    public void Natrag()
    {
        navManager.NavigateTo($"/");
    }
}